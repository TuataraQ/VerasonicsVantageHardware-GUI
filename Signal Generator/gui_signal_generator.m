function gui_signal_generator()
%
% Copyright 2001-2017 Verasonics, Inc.  All world-wide rights and remedies under all intellectual property laws and industrial property laws are reserved.  Verasonics Registered U.S. Patent and Trademark Office.
%
% VSX_GUI  This gui is opened by the main VSX program and allows control of various
% acquisition and processing parameters.
% Last update:
% 02/07/2018

% Set the common base voltage for channels 1-4
hv = evalin('base','MAXIMUM_VOLTAGE'); 
setTpcProfileHighVoltage(30,1);

% =========================================================================
% CHECK VERASONICS STATUS
% =========================================================================

% close any previously opened GUI windows
delete(findobj('tag', 'UI'));
% 
% get status of hardware
VDAS = 0;
if evalin('base', 'exist(''VDAS'',''var'')')
    VDAS = evalin('base', 'VDAS');
end

% don't allow the GUI to run without hardware
if VDAS ~= 1
    error('Verasonics hardware not connected.');
end

% determine simulateMode value
simMode = 0; 
if evalin('base','exist(''Resource'',''var'')')
    if evalin('base','isfield(Resource,''Parameters'')')
        if evalin('base','isfield(Resource.Parameters,''simulateMode'')')
            simMode = evalin('base','Resource.Parameters.simulateMode');
        end
    end
end

% don't allow the GUI to run in simulation mode
if simMode ~= 0
    error('GUI can''t be run in simulate mode');
end

% =========================================================================
% CREATE FIGURE WINDOW
% =========================================================================

% close any previously opened GUI windows
delete(findobj('tag', 'UI'));

% define GUI colors
Bkgrnd = [1 1 1];

% get the screen size
ScrnSize = get(0, 'ScreenSize');

% Initialize and hide the GUI as it is being constructed.
f = figure('Visible','off',... 
    'Position',[300,120,700,550],... 
    'Name','Signal Generator',...
    'NumberTitle','off',...
    'MenuBar','none', ...
    'Resize','on', ...
    'tag','UI');
set(f,'CloseRequestFcn',{@closefunc});
set(f,'DefaultUicontrolBackgroundColor',Bkgrnd)



% ====================================================================== %
% Get numbers from the workspace
% ====================================================================== %
ncpmax = evalin('base','ncpmax');
ncpmin = evalin('base','ncpmin');
prrmax = evalin('base','prrmax');
prrmin = evalin('base','prrmin');
fremax = evalin('base','fremax');
fremin = evalin('base','fremin');
volmax = evalin('base','volmax');
volmin = evalin('base','volmin');
delmax = evalin('base','delmax');
delmin = evalin('base','delmin');
function [TPC, number_cycles, pulse_repetition, frequency, initialize, txapod, txdelay, xmax,polarity] = loadworkspace
    TPC = evalin('base','TPC');
    number_cycles = evalin('base','number_cycles');
    pulse_repetition = evalin('base','pulse_repetition');
    frequency = evalin('base','frequency');
    initialize = evalin('base','initialize');
    txapod = evalin('base','txapod');
    txdelay = evalin('base','txdelay');
    xmax = evalin('base','xmax');
    polarity = evalin('base','polarity');
end
[TPC, number_cycles, pulse_repetition, frequency, initialize, txapod, txdelay, xmax, polarity] = loadworkspace;

% ====================================================================== %
% Self-customized Parts
% ====================================================================== %


% UI objects setup
% Axis to plot transmit waveform
ax = axes('Units','normalized',...
    'Position',[0.515,0.49,0.47,0.5],...
    'Box', 'on', ...
    'NextPlot','replacechildren');
xlabel('Time (us)');
ylabel('Voltage (V)');
axis([0,xmax,-30,30]);
grid on
grid minor
legend('show');
legend('boxoff');

% Axis callback
% ui===================================================================== %
axxmaxfram = uicontrol('Parent',f,...
    'Style','frame',...
    'Units','normalized',...
    'Position',[0.52,0.355,0.16,0.09]);
axxmaxtext = uicontrol('Parent',f,...
    'Style','text',...
    'string','x-axis control (us)',...
    'Units','normalized',...
    'Position',[0.53,0.385,0.14,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.4);
axxmaxedit = uicontrol('Parent',f,...
    'Style','edit',...
    'Units','normalized',...
    'Position',[0.525,0.365,0.15,0.03],...
    'String',num2str(xmax),...
    'FontUnits','normalized',...
    'FontSize',0.8,...
    'Callback',{@xmaxedit_callback});

% Create frame to hold general settings
gen_fram = uicontrol('Parent', f,...
    'Style','frame',...
    'Units','normalized',...
    'Position',[0.01,0.38,0.435,0.5]);
gen_text = uicontrol('Parent',f,...
    'Style','text',...
    'string','General Settings',...
    'Units','normalized',...
    'Position',[0.02,0.78,0.25,0.08],...
    'FontUnits','normalized',...
    'FontSize',0.5);
        
% Number of Cycles period
ncpfram = uicontrol('Parent',f,...
    'Style','frame',...
    'Units','normalized',...
    'Position',[0.018,0.7,0.42,0.1]);
ncptext = uicontrol('Parent',f,...
    'Style','text',...
    'string','Number of Cycles Period',...
    'Units','normalized',...
    'Position',[0.02,0.7075,0.18,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.4);
ncpup = uicontrol('Parent',f,...
    'Style','text',...
    'string',num2str(ncpmax),...
    'Units','normalized',...
    'Position',[0.395,0.73,0.03,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
ncplow = uicontrol('Parent',f,'Style',...
    'text',...
    'string',num2str(ncpmin),...
    'Units','normalized',...
    'Position',[0.2175,0.73,0.03,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
ncpedit = uicontrol('Parent',f,...
    'Style','edit',...
    'string',num2str(number_cycles),...
    'Units','normalized',...
    'Position',[0.245,0.73,0.15,0.03],...
    'FontUnits','normalized',...
    'FontSize',0.8,...
    'Callback',{@ncpedit_callback});
    
% Pulse Repetition Period
prrfram = uicontrol('Parent',f,...
    'Style','frame',...
    'Units','normalized',...
    'Position',[0.018,0.6,0.42,0.1]);
prrtext = uicontrol('Parent',f,...
    'Style','text',...
    'string','Pulse Repetition Period (us)',...
    'Units','normalized',...
    'Position',[0.02,0.62,0.18,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.4);
prrup = uicontrol('Parent',f,...
    'Style','text',...
    'string',num2str(prrmax),...
    'Units','normalized',...
    'Position',[0.375,0.63,0.06,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
prrlow = uicontrol('Parent',f,...
    'Style','text',...
    'string',num2str(prrmin),...
    'Units','normalized',...
    'Position',[0.2175,0.63,0.03,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
prredit = uicontrol('Parent',f,...
    'Style','edit',...
    'string',num2str(pulse_repetition),...
    'Units','normalized',...
    'Position',[0.245,0.63,0.13,0.03],...
    'FontUnits','normalized',...
    'FontSize',0.8,...
    'Callback',{@prredit_callback});


% Frequency
frefram = uicontrol('Parent',f,...
    'Style','frame',...
    'Units','normalized',...
    'Position',[0.018,0.5,0.42,0.1]);
fretext = uicontrol('Parent',f,...
    'Style','text',...
    'string','Frequency (MHz)',...
    'Units','normalized',...
    'Position',[0.02,0.52,0.18,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.4);
fup = uicontrol('Parent',f,...
    'Style','text',...
    'string',num2str(fremax),...
    'Units','normalized',...
    'Position',[0.395,0.53,0.03,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
flow = uicontrol('Parent',f,...
    'Style','text',...
    'string',num2str(fremin),...
    'Units','normalized',...
    'Position',[0.2175,0.53,0.03,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
freedit = uicontrol('Parent',f,...
    'Style','edit',...
    'string',num2str(frequency),...
    'Units','normalized',...
    'Position',[0.245,0.53,0.15,0.03],...
    'FontUnits','normalized',...
    'FontSize',0.8,...
    'Callback',{@freedit_callback});

% Polarity
polfram = uicontrol('Parent',f,...
    'Style','frame',...
    'Units','normalized',...
    'Position',[0.018,0.4,0.42,0.1]);
poltext = uicontrol('Parent',f,...
    'Style','text',...
    'string','Polarity',...
    'Units','normalized',...
    'Position',[0.02,0.41,0.18,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.4);
poltoggle = uicontrol('Parent',f,...
    'Style','togglebutton',...
    'Value', 1,...
    'string','Positive',...
    'Units','normalized',...
    'Position',[0.245,0.43,0.15,0.03],...
    'FontUnits','normalized',...
    'FontSize',0.8,...
    'Callback',{@poltoggle_callback});

% Individual Settings
ind_fram = uicontrol('Parent',f,...
    'Style','frame',...
    'Units','normalized',...
    'Position',[0.01,0.05,0.96,0.3]);
ind_text = uicontrol('Parent',f,...
    'Style','text',...
    'string','Individual Settings',...
    'Units','normalized',...
    'Position',[0.02,0.25,0.3,0.08],...
    'FontUnits','normalized',...
    'FontSize',0.5);

% Channel 1 control
fram_1 = uicontrol('Parent',f,...
    'Style','frame',...
    'Units','normalized',...
    'Position',[0.02,0.07,0.22,0.2]);
ch_1_fram = uicontrol('Parent',f,...
    'Style','frame',...
    'Units','normalized',...
    'Position',[0.03,0.19,0.195,0.07]);
ch_1_text = uicontrol('Parent',f,...
    'Style','text',...
    'string','Channel 1',...
    'Units','normalized',...
    'Position',[0.035,0.195,0.15,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.6);
onoff1_toggle = uicontrol('Parent',f,...
    'Style','togglebutton',...
    'string','OFF',...
    'Value',0,...
    'Units','normalized',...
    'Position',[0.17,0.2,0.04,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.4,...
    'Callback',{@onoff_1_callback});
voltup1 = uicontrol('Parent',f,...
    'Style','text',...
    'String',num2str(volmax),...
    'Units','normalized',...
    'Position',[0.205,0.135,0.03,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
voltlow1 = uicontrol('Parent',f,...
    'Style','text',...
    'String',num2str(volmin),...
    'Units','normalized',...
    'Position',[0.087,0.135,0.05,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
delup1 = uicontrol('Parent',f,...
    'Style','text',...
    'String',num2str(delmax),...
    'Units','normalized',...
    'Position',[0.205,0.085,0.03,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
dellow1 = uicontrol('Parent',f,...
    'Style','text',...
    'String',num2str(delmin),...
    'Units','normalized',...
    'Position',[0.087,0.085,0.05,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);

V_1_text = uicontrol('Parent',f,...
    'Style','text',...
    'string','Voltage (V):',...
    'Units','normalized',...
    'Position',[0.025,0.125,0.07,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.4);
V_1_edit = uicontrol('Parent',f,...
    'Style','edit',...
    'string',num2str(volmax*txapod(1)),...
    'Units','normalized',...
    'Position',[0.12,0.135,0.085,0.03],...
    'FontUnits','normalized',...
    'FontSize',0.8,...
    'Callback',{@v1edit_callback});



del_1_text = uicontrol('Parent',f,...
    'Style','text',...
    'string','Delay (us):',...
    'Units','normalized',...
    'Position',[0.025,0.075,0.06,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.4);
del_1_edit = uicontrol('Parent',f,...
    'Style','edit',...
    'string',num2str(txdelay(1)),...
    'Units','normalized',...
    'Position',[0.12,0.085,0.085,0.03],...
    'FontUnits','normalized',...
    'FontSize',0.8,...
    'Callback',{@d1edit_callback});
        


% % Channel 2 control
fram_2 = uicontrol('Parent',f,...
    'Style','frame',...
    'Units','normalized',...
    'Position',[0.02+0.24,0.07,0.22,0.2]);
ch_2_fram = uicontrol('Parent',f,...
    'Style','frame',...
    'Units','normalized',...
    'Position',[0.03+0.24,0.19,0.195,0.07]);
ch_2_text = uicontrol('Parent',f,...
    'Style','text',...
    'string','Channel 2',...
    'Units','normalized',...
    'Position',[0.035+0.24,0.195,0.15,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.6);
voltup2 = uicontrol('Parent',f,...
    'Style','text',...
    'String',num2str(volmax),...
    'Units','normalized',...
    'Position',[0.205 + 0.24,0.135,0.03,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
voltlow2 = uicontrol('Parent',f,...
    'Style','text',...
    'String',num2str(volmin),...
    'Units','normalized',...
    'Position',[0.087 + 0.24,0.135,0.05,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
delup2 = uicontrol('Parent',f,...
    'Style','text',...
    'String',num2str(delmax),...
    'Units','normalized',...
    'Position',[0.205 + 0.24,0.085,0.03,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
dellow2 = uicontrol('Parent',f,...
    'Style','text',...
    'String',num2str(delmin),...
    'Units','normalized',...
    'Position',[0.327 ,0.085,0.05,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
onoff2_toggle = uicontrol('Parent',f,...
    'Style','togglebutton',...
    'string','OFF',...
    'Value',0,...
    'Units','normalized',...
    'Position',[0.17+0.24,0.2,0.04,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.4,...
    'Callback',{@onoff_2_callback});
        

V_2_text = uicontrol('Parent',f,...
    'Style','text',...
    'string','Voltage (V):',...
    'Units','normalized',...
    'Position',[0.025+0.24,0.125,0.07,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.4);
V_2_edit = uicontrol('Parent',f,...
    'Style','edit',...
    'string',num2str(volmax*txapod(2)),...
    'Units','normalized',...
    'Position',[0.12+0.24,0.135,0.085,0.03],...
    'FontUnits','normalized',...
    'FontSize',0.8,...
    'Callback',{@v2edit_callback});

del_2_text = uicontrol('Parent',f,...
    'Style','text',...
    'string','Delay (us):',...
    'Units','normalized',...
    'Position',[0.025+0.24,0.075,0.06,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.4);
del_2_edit = uicontrol('Parent',f,...
    'Style','edit',...
    'string',num2str(txdelay(2)),...
    'Units','normalized',...
    'Position',[0.12+0.24,0.085,0.085,0.03],...
    'FontUnits','normalized',...
    'FontSize',0.8,...
    'Callback',{@d2edit_callback});

        
% Channel 3 control
fram_3 = uicontrol('Parent',f,...
    'Style','frame',...
    'Units','normalized',...
    'Position',[0.02+0.48,0.07,0.22,0.2]);
ch_3_fram = uicontrol('Parent',f,...
    'Style','frame',...
    'Units','normalized',...
    'Position',[0.03+0.48,0.19,0.195,0.07]);
ch_3_text = uicontrol('Parent',f,...
    'Style','text',...
    'string','Channel 3',...
    'Units','normalized',...
    'Position',[0.035+0.48,0.195,0.15,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.6);
voltup3 = uicontrol('Parent',f,...
    'Style','text',...
    'String',num2str(volmax),...
    'Units','normalized',...
    'Position',[0.205+0.48,0.135,0.03,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
voltlow3 = uicontrol('Parent',f,...
    'Style','text',...
    'String',num2str(volmin),...
    'Units','normalized',...
    'Position',[0.087+0.48,0.135,0.05,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
delup3 = uicontrol('Parent',f,...
    'Style','text',...
    'String',num2str(delmax),...
    'Units','normalized',...
    'Position',[0.205+0.48,0.085,0.03,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
dellow3 = uicontrol('Parent',f,...
    'Style','text',...
    'String',num2str(delmin),...
    'Units','normalized',...
    'Position',[0.087+0.48,0.085,0.05,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
onoff3_toggle = uicontrol('Parent',f,...
    'Style','togglebutton',...
    'string','OFF',...
    'Value',0,...
    'Units','normalized',...
    'Position',[0.17+0.48,0.2,0.04,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.4,...
    'Callback',{@onoff_3_callback});

V_3_text = uicontrol('Parent',f,...
    'Style','text',...
    'string','Voltage (V):',...
    'Units','normalized',...
    'Position',[0.025+0.48,0.125,0.07,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.4);
V_3_edit = uicontrol('Parent',f,...
    'Style','edit',...
    'string',num2str(volmax*txapod(3)),...
    'Units','normalized',...
    'Position',[0.12+0.48,0.135,0.085,0.03],...
    'FontUnits','normalized',...
    'FontSize',0.8,...
    'Callback',{@v3edit_callback});

del_3_text = uicontrol('Parent',f,...
    'Style','text',...
    'string','Delay (us):',...
    'Units','normalized',...
    'Position',[0.025+0.48,0.075,0.06,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.4);
del_3_edit = uicontrol('Parent',f,...
    'Style','edit',...
    'string',num2str(txdelay(3)),...
    'Units','normalized',...
    'Position',[0.12+0.48,0.085,0.085,0.03],...
    'FontUnits','normalized',...
    'FontSize',0.8,...
    'Callback',{@d3edit_callback});


% Channel 4 control
fram_4 = uicontrol('Parent',f,...
    'Style','frame',...
    'Units','normalized',...
    'Position',[0.02+0.72,0.07,0.22,0.2]);
ch_4_fram = uicontrol('Parent',f,...
    'Style','frame',...
    'Units','normalized',...
    'Position',[0.03+0.72,0.19,0.195,0.07]);
ch_4_text = uicontrol('Parent',f,...
    'Style','text',...
    'string','Channel 4',...
    'Units','normalized',...
    'Position',[0.035+0.72,0.195,0.15,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.6);
voltup4 = uicontrol('Parent',f,...
    'Style','text',...
    'String',num2str(volmax),...
    'Units','normalized',...
    'Position',[0.205+0.72,0.135,0.03,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
voltlow4 = uicontrol('Parent',f,...
    'Style','text',...
    'String',num2str(volmin),...
    'Units','normalized',...
    'Position',[0.087+0.72,0.135,0.05,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
delup4 = uicontrol('Parent',f,...
    'Style','text',...
    'String',num2str(delmax),...
    'Units','normalized',...
    'Position',[0.205+0.72,0.085,0.03,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
dellow4 = uicontrol('Parent',f,...
    'Style','text',...
    'String',num2str(delmin),...
    'Units','normalized',...
    'Position',[0.087+0.72,0.085,0.05,0.02],...
    'FontUnits','normalized',...
    'FontSize',0.8);
onoff4_toggle = uicontrol('Parent',f,...
    'Style','togglebutton',...
    'string','OFF',...
    'Value',0,...
    'Units','normalized',...
    'Position',[0.17+0.72,0.2,0.04,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.4,...
    'Callback',{@onoff_4_callback});
   
V_4_text = uicontrol('Parent',f,...
    'Style','text',...
    'string','Voltage (V):',...
    'Units','normalized',...
    'Position',[0.025+0.72,0.125,0.07,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.4);
V_4_edit = uicontrol('Parent',f,...
    'Style','edit',...
    'string',num2str(volmax*txapod(4)),...
    'Units','normalized',...
    'Position',[0.12+0.72,0.135,0.085,0.03],...
    'FontUnits','normalized',...
    'FontSize',0.8,...
    'Callback',{@v4edit_callback});
        
 
del_4_text = uicontrol('Parent',f,...
    'Style','text',...
    'string','Delay (us):',...
    'Units','normalized',...
    'Position',[0.025+0.72,0.075,0.06,0.05],...
    'FontUnits','normalized',...
    'FontSize',0.4);
del_4_edit = uicontrol('Parent',f,...
    'Style','edit',...
    'string',num2str(txdelay(4)),...
    'Units','normalized',...
    'Position',[0.12+0.72,0.085,0.085,0.03],...
    'FontUnits','normalized',...
    'FontSize',0.8,...
    'Callback',{@d4edit_callback});

% 
% % ====================================================================== %
% 
% 
% Make the GUI visible, unless the call has requested that it be hidden.
set(f, 'Visible', 'on');
% 

% High Voltage slider.
%   The slider's min and max range is determined by the limits of the Verasonics
%   TPC and a max voltage limit that can be set in the user's setup script.
%
%   The user script may override the "Max" attribute of this slider to impose
%   a high voltage maximum limit that is less than the capability of the detected
%   Verasonics TPC.

% Read in TPC structure that has been initialized by VSX.
TPC = evalin('base','TPC');

% - For more than one active profile, determine the number to use for the 2nd slider. Profile 5 
%   has priority over profiles 2-4.
hv2 = 0;     % hv2 will get the profile to use for 2nd slider.
if TPC(5).inUse
    hv2 = 5;
else
    for i = 2:4
        if TPC(i).inUse ~= 0, hv2 = i; break, end;
    end
end

assignin('base', 'hv2GUIprofile', hv2);


% Make the GUI visible, unless the call has requested that it be hidden.
visibility = 'on';
if((true == evalin('base', 'exist(''Mcr_GuiHide'', ''var'')')) && (1 == evalin('base', 'Mcr_GuiHide')))
    % Caller has requested that we do NOT show the GUI window.
    visibility = 'off';
end
set(f,'Visible', visibility);


% ====================================================================== %
% NESTED CALLBACK FUNCTIONS
% ====================================================================== %

% ----------------------
% ON OFF BUTTONS
% ----------------------

function onoff_1_callback(hObject,eventdata)
    turn_element_off(onoff1_toggle, 1)
end

function onoff_2_callback(hObject,eventdata)
    turn_element_off(onoff2_toggle, 2)
end

function onoff_3_callback(hObject,eventdata)
    turn_element_off(onoff3_toggle, 3)
end

function onoff_4_callback(hObject,eventdata)
    turn_element_off(onoff4_toggle, 4)
end

function turn_element_off(toggle_handle, element_number)
    [TPC, number_cycles, pulse_repetition, frequency, initialize, txapod, txdelay, xmax, polarity] = loadworkspace;
    onoff = get(toggle_handle,'Value');
    initialize = evalin('base','initialize');
    TX = evalin('base','TX');
    if onoff > 0
        set(toggle_handle,'string','ON');
        initialize(element_number) = 1;
        assignin('base','initialize',initialize);

        % To trigger the plot
        updateplot(number_cycles,frequency,txdelay,txapod,element_number,initialize,TPC,polarity)
    else
        set(toggle_handle,'string','OFF');
        initialize(element_number) = 0;
        assignin('base','initialize',initialize);

        % Delete the plot when it is off
        delete(findobj('Tag', ['Plot' num2str(element_number)]));
    end
    intermediateapod = initialize .* txapod;
    intermediatedelay = initialize.* txdelay;
    TX(1).Apod = intermediateapod;
    TX(1).Delay = intermediatedelay;
    assignin('base','TX',TX);
    Control = evalin('base','Control');
    Control.Command = 'update&Run';
    Control.Parameters = {'TX'};
    assignin('base','Control', Control);    
    
end

% ----------------------
% Voltage
% ----------------------
function v1edit_callback(hObject,eventdata)
    drivevolt(V_1_edit, 1);
    [TPC, number_cycles, pulse_repetition, frequency, initialize, txapod, txdelay, xmax, polarity] = loadworkspace;
    % To trigger the plot
    updateplot(number_cycles,frequency,txdelay,txapod,1,initialize,TPC,polarity)
end        
function v2edit_callback(hObject,eventdata)
    drivevolt(V_2_edit, 2);
    [TPC, number_cycles, pulse_repetition, frequency, initialize, txapod, txdelay, xmax, polarity] = loadworkspace;
    % To trigger the plot
    updateplot(number_cycles,frequency,txdelay,txapod,2,initialize,TPC,polarity)
end        
function v3edit_callback(hObject,eventdata)
    drivevolt(V_3_edit, 3);
    [TPC, number_cycles, pulse_repetition, frequency, initialize, txapod, txdelay, xmax, polarity] = loadworkspace;
    % To trigger the plot
    updateplot(number_cycles,frequency,txdelay,txapod,3,initialize,TPC,polarity)
end        
function v4edit_callback(hObject,eventdata)
    drivevolt(V_4_edit, 4);
    [TPC, number_cycles, pulse_repetition, frequency, initialize, txapod, txdelay, xmax, polarity] = loadworkspace;
    % To trigger the plot
    updateplot(number_cycles,frequency,txdelay,txapod,4,initialize,TPC,polarity)
end        
function drivevolt(voltedit_handle, element_number)
    volt = str2double(get(voltedit_handle,'string'));
    [volt] = limit(voltedit_handle, volt, volmax, volmin);
    txapod = evalin('base','txapod');
    txapod(element_number) = volt/volmax;
    assignin('base','txapod',txapod);

    % True system Callback
    TXx = evalin('base','TX');
    initialize = evalin('base','initialize');
    if initialize(element_number) == 1
        TXx.Apod = txapod;
        assignin('base','TX',TXx);
        Control = evalin('base','Control');
        Control.Command = 'update&Run';
        Control.Parameters = {'TX'};
        assignin('base','Control', Control);
    end
    
end


% ----------------------
% Delay
% ----------------------
function d1edit_callback(hObject,eventdata) 
    drivedelay(del_1_edit, 1);
    [TPC, number_cycles, pulse_repetition, frequency, initialize, txapod, txdelay, xmax, polarity] = loadworkspace;
    % To trigger the plot
    updateplot(number_cycles,frequency,txdelay,txapod,1,initialize,TPC,polarity)
end
function d2edit_callback(hObject,eventdata) 
    drivedelay(del_2_edit, 2);
    [TPC, number_cycles, pulse_repetition, frequency, initialize, txapod, txdelay, xmax, polarity] = loadworkspace;
    % To trigger the plot
    updateplot(number_cycles,frequency,txdelay,txapod,2,initialize,TPC,polarity)
end
function d3edit_callback(hObject,eventdata) 
    drivedelay(del_3_edit, 3);
    [TPC, number_cycles, pulse_repetition, frequency, initialize, txapod, txdelay, xmax, polarity] = loadworkspace;
    % To trigger the plot
    updateplot(number_cycles,frequency,txdelay,txapod,3,initialize,TPC,polarity)
end
function d4edit_callback(hObject,eventdata) 
    drivedelay(del_4_edit, 4);
    [TPC, number_cycles, pulse_repetition, frequency, initialize, txapod, txdelay, xmax, polarity] = loadworkspace;
    % To trigger the plot
    updateplot(number_cycles,frequency,txdelay,txapod,4,initialize,TPC,polarity)
end
function drivedelay(delayedit_handle, element_number)
    delay = round(str2double(get(delayedit_handle,'string')));
    [delay] = limit(delayedit_handle, delay,delmax,delmin);
    delay = delay*1e-6;
    frequency = evalin('base','frequency');
    delay_in_wavelength = delay*frequency*1e6;
    txdelay = evalin('base','txdelay');
    txdelay(element_number) = delay_in_wavelength;
    assignin('base','txdelay',txdelay);

    % True system callback
    TX = evalin('base','TX');
    initialize = evalin('base','initialize');
    if initialize(element_number) == 1
        TX.Delay = txdelay;
        assignin('base','TX',TX);
        Control = evalin('base','Control');
        Control.Command = 'update&Run';
        Control.Parameters = {'TX'};
        assignin('base','Control', Control);
    end
    
end


    function freedit_callback(hObject,eventdata)
        frequency = str2double(get(freedit,'String'));
        [frequency] = limit(freedit, frequency,fremax,fremin);
        % Put back to number to workspace
        assignin('base','frequency',frequency);

        
        % True system Callback
        TWx = evalin('base','TW');
        TWx.Parameters(1) = frequency;
        assignin('base','TW',TWx);
        Control = evalin('base','Control');
        Control.Command = 'update&Run';
        Control.Parameters = {'TW'};
        assignin('base','Control', Control);
        
        for i = 1:4
        updateplot(number_cycles,frequency,txdelay,txapod,i,initialize,TPC,polarity)
        end
    end        

    function prredit_callback(hObject,eventdata)
        pulse_repetition = round(str2double(get(prredit,'String')));
        [pulse_repetition] = limit(prredit, pulse_repetition,prrmax,prrmin);
        % Put back to number to workspace
        assignin('base','pulse_repetition',pulse_repetition);

        
        % True system Callback
        SeqControlx = evalin('base','SeqControl');
        SeqControlx(1).argument = pulse_repetition;
        assignin('base','SeqControl',SeqControlx);
        Control = evalin('base','Control');
        Control.Command = 'update&Run';
        Control.Parameters = {'SeqControl'};
        assignin('base','Control', Control);
    end

    function ncpedit_callback(hObject,eventdata)
        number_cycles = str2double(get(ncpedit,'String'));
        [number_cycles] = limit(ncpedit, number_cycles,ncpmax,ncpmin);
        % Put back to number to workspace
        assignin('base','number_cycles',number_cycles);
%         
        % True system Callback
        TWx = evalin('base', 'TW');
        TWx.Parameters(3) = 2*number_cycles;
        assignin('base', 'TW', TWx);
        Control = evalin('base', 'Control'); 
        Control.Command = 'update&Run';
        Control.Parameters = {'TW'};
        assignin('base','Control', Control); 
        
        % plot ============================================ %
        % To trigger the plot
        for i = 1:4
        updateplot(number_cycles,frequency,txdelay,txapod,i,initialize,TPC,polarity)
        end
        
    end
    function poltoggle_callback(hObject,eventdata)
        pol = get(poltoggle,'Value');
        if pol > 0
            set(poltoggle,'string','Positive');
            polarity = -1;
            assignin('base','polarity',polarity);
            
            % True system Callback
            TW = evalin('base','TW');
            TW.Parameters(4) = polarity;
            assignin('base','TW',TW);
            Control = evalin('base','Control');
            Control.Command = 'update&Run';
            Control.Parameters = {'TW'};
            assignin('base','Control',Control);
            
            % Update the plot
            for i = 1:4
            updateplot(number_cycles,frequency,txdelay,txapod,i,initialize,TPC,polarity);
            [TPC, number_cycles, pulse_repetition, frequency, initialize, txapod, txdelay, xmax,polarity] = loadworkspace;
            end
       else
            set(poltoggle,'string','Negative');
            polarity = 1;
            assignin('base','polarity',polarity);
            
            % True system Callback
            TW = evalin('base','TW');
            TW.Parameters(4) = polarity;
            assignin('base','TW',TW);
            Control = evalin('base','Control');
            Control.Command = 'update&Run';
            Control.Parameters = {'TW'};
            assignin('base','Control',Control);
            
            % Update the plot
            for i = 1:4
            updateplot(number_cycles,frequency,txdelay,txapod,i,initialize,TPC,polarity);
            [TPC, number_cycles, pulse_repetition, frequency, initialize, txapod, txdelay, xmax,polarity] = loadworkspace;
            end
        end
    end 

    function xmaxedit_callback(hObject,eventdata)
        xmax = round(str2double(get(axxmaxedit,'String')));
        limit(axxmaxedit,xmax,prrmax,1);
        assignin('base','xmax',xmax);
        % Plot Callback ======================================= %
        hold on 
        set(ax,'XLim',[0,xmax]);
        hold off
        % Plot Callback ======================================= %
    end

function updateplot(number_cycles,frequency,txdelay,txapod,i,initialize,TPC,polarity)
% plot ============================================ %
% To trigger the plot
% imaginery data for plotting
    x = linspace(0,number_cycles*1/frequency,100*number_cycles);
    y = sin(2*pi*frequency*x);
    
    hold on;
    if i == 1 && initialize(1) == 1
    delete(findobj('Tag','Plot1'));
    p1 = plot(linspace(txdelay(1)/frequency,(txdelay(1)+number_cycles)*1/frequency ,100*number_cycles),-polarity*txapod(1)*TPC(1).hv*y,'r','Tag','Plot1',...
                'DisplayName','Channel 1');
    elseif i == 2 && initialize(2) == 1
    delete(findobj('Tag','Plot2'));
    p2 = plot(linspace(txdelay(2)/frequency,(txdelay(2)+number_cycles)*1/frequency ,100*number_cycles),-polarity*txapod(2)*TPC(1).hv*y,'g','Tag','Plot2',...
                'DisplayName','Channel 2');
    elseif i == 3 && initialize(3) == 1
    delete(findobj('Tag','Plot3'));
    p3 = plot(linspace(txdelay(3)/frequency,(txdelay(3)+number_cycles)*1/frequency ,100*number_cycles),-polarity*txapod(3)*TPC(1).hv*y,'b','Tag','Plot3',...
                'DisplayName','Channel 3');
    elseif i == 4 && initialize(4) == 1
    delete(findobj('Tag','Plot4'));
    p4 = plot(linspace(txdelay(4)/frequency,(txdelay(4)+number_cycles)*1/frequency ,100*number_cycles),-polarity*txapod(4)*TPC(1).hv*y,'k','Tag','Plot4',...
                'DisplayName','Channel 4');
    end 
    hold off;
end
% upper limit & lower limit function
function [edit_get] = limit(edit_handle, edit_get,max,min)
    if edit_get > max
        edit_get = max;
        set(edit_handle,'string',num2str(max));
    elseif edit_get < min
        edit_get = min;
        set(edit_handle,'string',num2str(min));
    end
end

    function closefunc(source,eventdata)
        assignin('base', 'exit', 1);
        if exist('hvtmr','var'), stop(hvtmr); delete(hvtmr); end
        delete(f);
    end
end

